# Generated by Watcher
# Changes will be overwritten!

global
	daemon
	user haproxy
	group haproxy
	pidfile /var/run/haproxy.pid
	maxconn 50000
	ulimit-n 100014
	tune.ssl.default-dh-param 2048
	log /dev/log local0 info
	#log /dev/log local0 notice
	#log /dev/log local1 info
	#log /dev/log local1 notice

defaults TCP
	balance leastconn
	mode tcp
	option clitcpka
	option srvtcpka
	timeout connect 5s
	timeout client 300s
	timeout server 300s
	source <%= haproxy['config']['main']['ip'] %>

defaults HTTP
	balance roundrobin
	mode http
	maxconn 2000
	timeout connect 5s
	timeout client 50s
	timeout server 50s
	default_backend <%= haproxy['config']['main']['site'] %>_default_cluster
	source <%= haproxy['config']['main']['ip'] %>

listen stats
	bind <%= node_ip %>:1936 ssl crt /etc/haproxy/certs.d
	stats enable
	stats hide-version
	stats uri /
	stats realm Haproxy\ Statistics
	stats auth <%= haproxy['config']['main']['basic_auth_user'] %>:<%= haproxy['config']['main']['basic_auth_password'] %>
	description stats pool

# Basic auth configuration
###BASIC-AUTH-CONFIG###

<% combined_sites.each_pair do |definition_name, definition_data| -%>
frontend <%= definition_name %>_www
	bind <%= definition_data['ip'] %>:80
	mode http
	option clitcpka
	option forwardfor
	option httplog
	log global
	description http frontend pool

	# ACLs
	acl letsencrypt-request path_beg -i /.well-known/acme-challenge/
	acl http ssl_fc,not

	# Redirects
	redirect scheme https if http !letsencrypt-request

	# Lets encrypt Backend
	use_backend letsencrypt if letsencrypt-request

	# Backends
	default_backend <%= definition_name %>_default_cluster

frontend <%= definition_name %>_www-ssl
	bind <%= definition_data['ip'] %>:443 ssl crt /etc/haproxy/default.pem crt /etc/haproxy/certs.d
	mode http
	option clitcpka
	reqadd X-Forwarded-Proto:\ https
	option forwardfor
	option http-server-close
	option httplog
	log global
	description https frontend pool

	# ACLs
	<% definition_data['config'].each_pair do |_site_name, site_data| -%>
	<% if site_data['acls'] -%>
	<% site_data['acls'].each do |acl_rule| -%>
	acl <%= acl_rule %>
	<% end -%>
	<% end -%>
	<% end -%>

	# Redirects
	<% definition_data['config'].each_pair do |_site_name, site_data| -%>
	<% if site_data['redirects'] -%>
	<% site_data['redirects'].each do |redirect_rule| -%>
	<%= redirect_rule %>
	<% end -%>
	<% end -%>
	<% end -%>

	# Backends
	default_backend <%= definition_name %>_default_cluster
	<% definition_data['config'].each_pair do |site_name, site_data| -%>
	<% unless site_data['use_backends'].nil? -%>
	<% site_data['use_backends'].each do |use_backend_rule| -%>
	use_backend <%= definition_name %>_<%= site_name %>_cluster <%= use_backend_rule %>
	<% end -%>
	<% end -%>
	<% end -%>

<% end %>

<% combined_sites.each_pair do |definition_name, definition_data| %>
<% definition_data['config'].each_pair do |site_name, site_data| %>
backend <%= definition_name %>_<%= site_name %>_cluster
	balance roundrobin
	mode http
	description <%= site_name %> Servers
	source <%= definition_data['ip'] %>

	<% if site_data['auth'] -%>
	<% site_data['auth'].each do |acl_rule| -%>
	acl <%= acl_rule %>
	<% end -%>

	http-request auth realm OdaniaIT if !acl_auth_odania_ok
	<% end -%>

	<% unless site_data['service'].nil? -%>
	<% service_backends(site_data['service']).each_with_index do |backend_server, idx| -%>
	server <%= definition_name %>_<%= site_name %>_<%= idx %> <%= backend_server %>
	<% end -%>
	<% end -%>

<% end -%>
<% end -%>

backend letsencrypt
	mode http
	description Letsencrypt pool
	source <%= node_ip %>
	server letsencrypt <%= haproxy['config']['main']['letsencrypt_node'] %>:9999
